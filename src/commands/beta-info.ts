import {
  SlashCommandBuilder,
  CommandInteraction,
  CacheType,
  TextChannel,
  CommandInteractionOptionResolver,
  PermissionFlagsBits,
  EmbedBuilder,
} from 'discord.js';
import ExtendedClient from 'classes/ExtendedClient';
import Command from 'classes/Command';

export default class BetaInfo extends Command {
  constructor(name: string) {
    super(name);
  }

  description =
    'Displays information regarding the beta programme. [Developer-only]';

  devOnly = true;

  get data(): Partial<SlashCommandBuilder> {
    return new SlashCommandBuilder()
      .setName(this.name)
      .setDescription(this.description)
      .setDMPermission(false)
      .setDefaultMemberPermissions(PermissionFlagsBits.Administrator);
  }

  public async execute(
    client: ExtendedClient,
    interaction: CommandInteraction<CacheType>
  ): Promise<void> {
    const codes = await client.prisma.betaInviteCode.findMany();

    const embed = new EmbedBuilder()
      .setTitle('Beta Information')
      .setColor(client.color).setDescription(`
      ${codes
        .map(
          code =>
            `- ${code.code}${code.name ? ` "${code.name}"` : ''} (${
              code.uses
            }/${code.maxUses}max). Generated by <@${code.generatedById}>. ${
              code.expiresAt
                ? `Expires <t:${Math.floor(
                    code.expiresAt.getTime() / 1000
                  )}:R>.`
                : ''
            }`
        )
        .join('\n')}`);

    await interaction.reply({
      embeds: [embed],
      ephemeral: true,
    });
  }
}
